# Context free grammar for validation of parse trees
# Lines starting with # are comments
# Rules ending with '+'  mean 'at least 1'
# Rules ending with '?' are '0 or 1' 
# Rules can inherit base classes with RULE(BASE_CLASS)


ROOT: QUERY | COUNT | EXISTS | IS_A

# PROPERTY is the subject or the object of an RDF triple. The child ENTITY_SET is the other side of the triple.
# It can have an associated VARIABLE and types
PROPERTY(QUERY): QUERY VARIABLE? TYPE+?
ENUMERATE(QUERY): TYPE+?
MAX(QUERY): QUERY ENTITY_SET

ARGMAX(QUERY): QUERY
ARGMIN(QUERY): QUERY
ARGNTH(QUERY): QUERY LITERAL

COUNT: QUERY
EXISTS: QUERY
IS_A: QUERY TYPE+

GREATER(ENTITY_SET): ENTITY_SET LITERAL
LESS(ENTITY_SET): ENTITY_SET LITERAL

TYPE: TOKEN+
ENTITY(QUERY): TOKEN+
LITERAL: TOKEN+
UNUSED: TOKEN+
VARIABLE: TOKEN+
